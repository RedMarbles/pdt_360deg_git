task=train_using_stuff
random_seed=0
silent_mode=true

[train]

background_class_label=-1

training_set_name=Caltech-USA_octave_0
training_set=/BS/mohomran-projects/work/MScThesis/databases/training/Caltech-USA/train
positives_path_prefix=positives
negatives_path_prefix=images
annotations_folder=/BS/mohomran-projects/work/MScThesis/databases/training/Caltech-USA/train/annotations
test_set=

# x, y, width, height
object_window=8,16,48,96
model_window=64,128

# from training example top-left corner to model window
offset_x=20
offset_y=20

output_model_filename=caltech_baseline

min_feature_width=4
min_feature_height=4

bootstrap_learner_file=

use_stump_sets=false

feature_pool_type=HOG-multiScale-modulo
feature_pool_modulo_scale=4
feature_pool_modulo_shift=4
feature_pool_size=30000
num_feature_response_bins=256

# FIXME is this even used ?
type_adaboost=discrete

# level 2 decision trees
decision_tree_depth=1

# DBP means: Direct Backward Pruning (see C. Zang and P. Viola 2007)
cascade_type=dbp

num_negative_samples = 5000
shuffle_background_images = true

context_feature_restriction_type = 2
#0: early stopping, #1: late onset, #2: no restriction
num_context_rounds = 64
random_feature_subset = 1.0

weak_classifier_weight_shrinkage_factor = 1.0
#uniform_weighting_of_weak_classifiers = 0.12 
#set to -1 to learn the weights

[channels]

channel_groups=hog6_luv

[bootstrap_train]

# 2000 weak classifiers
classifiers_per_stage=2048
classifiers_per_stage=2048
classifiers_per_stage=2048
classifiers_per_stage=2048
classifiers_per_stage=2048
classifiers_per_stage=2048

max_num_samples_per_image=1
max_num_samples_per_image=5
max_num_samples_per_image=-1
max_num_samples_per_image=-1
max_num_samples_per_image=-1
max_num_samples_per_image=-1

# number of samples collected at each stage
# first stage takes random negative samples, then we take hard negative samples
num_bootstrapping_samples = 5000
shuffle_false_positives = false

min_scale = 0.5
max_scale = 5.0
num_scales = 27

min_ratio = 1
max_ratio = 1
num_ratios = 1

[test]

classifier_name=model_for_test.proto.bin
test_set=testfull.txt

# from testing example top-left corner to model window
offset_x=20
offset_y=20

[pixel_labeler]

method=gpu_labeler

min_scale = 1
max_scale = 1
num_scales = 1

min_ratio = 1
max_ratio = 1
num_ratios = 1

x_stride = 0.00001
y_stride = 0.00001

[objects_detector]

gpu.use_gpu_image_resizer = false
